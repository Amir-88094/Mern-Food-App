{"ast":null,"code":"var _jsxFileName = \"E:\\\\Food Delivery App Mern Projects\\\\myapp\\\\src\\\\Components\\\\Card.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport { useCart, useDispatchCart } from \"./ContextReducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Card = props => {\n  _s();\n  console.log(\"props\" + props.foodItem.name);\n  const priceRef = useRef();\n  let dispatch = useDispatchCart();\n  let data = useCart();\n  // let options = props.options;\n  console.log(\"options\" + props.options);\n  let priceoptions = Object.keys(props.options[0]);\n  //console.log(priceoptions);\n  let foodItem = props.foodItem;\n  const [qty, setqty] = useState(1);\n  const [size, setsize] = useState(\"\");\n  const handleaddtoCart = async () => {\n    let food = [];\n    for (const item of data) {\n      if (item._id == data._id) {\n        food = item;\n        break;\n      }\n    }\n    if (food != []) {\n      if (food.size == size) {\n        await dispatch({\n          type: \"UPDATE\",\n          id: foodItem._id,\n          price: finalprice,\n          qty: qty\n        });\n      }\n    }\n    await dispatch({\n      type: \"ADD\",\n      id: props.foodItem._id,\n      name: props.foodItem.name,\n      price: props.finalPrice,\n      qty: qty,\n      size: size\n    });\n    console.log(data);\n    // useCart jo ki state ki value return karta hai wo hai\n  };\n\n  const handleNumberChange = e => {\n    setqty(parseInt(e.target.value, 10));\n  };\n  const handleQuantityChange = e => {\n    setsize(e.target.value);\n  };\n  useEffect(() => {\n    setsize(priceRef.current.value);\n  }, []);\n  useEffect(() => {\n    // This useEffect runs when the 'data' (cart items) state changes\n    //console.log(\"Updated Cart Items:\", data);\n    // You can also display the updated items in your component, e.g., update a state variable to trigger a re-render\n    // setUpdatedItems(data);\n  }, [data]); // The useEffect depends on the 'data' state\n\n  let finalprice = qty * props.options[0][size];\n  //console.log(qty,props.options[0]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mt-3 ms-5 col-4\",\n    style: {\n      width: \"18rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.foodItem.img,\n      className: \"card-img-top\",\n      alt: \"...\",\n      style: {\n        height: \"120px\",\n        objectFit: \"fill\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        className: \"card-title\",\n        children: props.foodItem.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"card-text\",\n        children: props.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container w-100\",\n        children: [/*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"m-2 h-100  bg-success\",\n          onChange: handleNumberChange,\n          value: qty,\n          children: Array.from(Array(6), (e, i) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: i + 1,\n            children: i + 1\n          }, i + 1, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          className: \"m-2 bg-success\",\n          ref: priceRef,\n          onChange: handleQuantityChange,\n          value: size,\n          children: priceoptions.filter(data => data !== '_id').map(data => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: data,\n            children: data\n          }, data, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-inline h-100 fs-5\",\n          children: [\"\\u20B9\", finalprice]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btn btn-success bg-black text-success  border border-dark rounded-circle fw-bold\",\n        onClick: handleaddtoCart,\n        children: \"Add to Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 6\n  }, this);\n};\n_s(Card, \"npNiLbdItQcgzFJK3CA6QKT3iZI=\", false, function () {\n  return [useDispatchCart, useCart];\n});\n_c = Card;\nexport default Card;\nvar _c;\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"names":["React","useState","useRef","useEffect","useCart","useDispatchCart","jsxDEV","_jsxDEV","Card","props","_s","console","log","foodItem","name","priceRef","dispatch","data","options","priceoptions","Object","keys","qty","setqty","size","setsize","handleaddtoCart","food","item","_id","type","id","price","finalprice","finalPrice","handleNumberChange","e","parseInt","target","value","handleQuantityChange","current","className","style","width","children","src","img","alt","height","objectFit","fileName","_jsxFileName","lineNumber","columnNumber","description","onChange","Array","from","i","ref","filter","map","onClick","_c","$RefreshReg$"],"sources":["E:/Food Delivery App Mern Projects/myapp/src/Components/Card.js"],"sourcesContent":["import React, { useState,useRef,useEffect} from \"react\";\r\nimport {useCart, useDispatchCart} from \"./ContextReducer\";\r\n\r\n\r\n\r\nconst Card = (props) => {\r\n  console.log(\"props\"+props.foodItem.name)\r\n  const priceRef = useRef();\r\n  let dispatch = useDispatchCart();\r\n  let data = useCart();\r\n  // let options = props.options;\r\n  console.log(\"options\"+props.options);\r\n\r\n  let priceoptions = Object.keys(props.options[0]);\r\n  //console.log(priceoptions);\r\n  let foodItem = props.foodItem;\r\n\r\n\r\n\r\n  const [qty, setqty] = useState(1);\r\n  const [size, setsize] = useState(\"\");\r\n\r\n  const handleaddtoCart = async() => {\r\n    let food = []\r\n    for(const item of data){\r\n       if(item._id == data._id)\r\n       {\r\n        food = item;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if(food != [])\r\n    {\r\n       if(food.size == size)\r\n       {\r\n         await dispatch({type: \"UPDATE\", id:foodItem._id, price:finalprice, qty:qty});\r\n       }\r\n    }\r\n\r\n\r\n    await dispatch({type: \"ADD\", id: props.foodItem._id, name: props.foodItem.name, price: props.finalPrice, qty: qty, size: size});\r\n     console.log(data);\r\n    // useCart jo ki state ki value return karta hai wo hai\r\n  }\r\n\r\n  const handleNumberChange = (e) => {\r\n    setqty(parseInt(e.target.value, 10));\r\n  };\r\n\r\n  const handleQuantityChange = (e) => {\r\n    setsize(e.target.value);\r\n  };\r\n  useEffect( () => {\r\n   setsize(priceRef.current.value);\r\n  },[])\r\n  useEffect(() => {\r\n    // This useEffect runs when the 'data' (cart items) state changes\r\n    //console.log(\"Updated Cart Items:\", data);\r\n    // You can also display the updated items in your component, e.g., update a state variable to trigger a re-render\r\n    // setUpdatedItems(data);\r\n  }, [data]); // The useEffect depends on the 'data' state\r\n\r\n  let finalprice = qty* props.options[0][size];\r\n  //console.log(qty,props.options[0]);\r\n  return (\r\n     <div className=\"card mt-3 ms-5 col-4\" style={{ width: \"18rem\" }}>\r\n      <img src={props.foodItem.img} className=\"card-img-top\" alt=\"...\" style={{height: \"120px\", objectFit: \"fill\"}}/>\r\n      <div className=\"card-body\">\r\n        <h5 className=\"card-title\">{props.foodItem.name}</h5>\r\n        <p className=\"card-text\">{props.description}</p>\r\n        <div className=\"container w-100\">\r\n          <select\r\n            className=\"m-2 h-100  bg-success\"\r\n            onChange={handleNumberChange}\r\n            value={qty}\r\n          >\r\n            {Array.from(Array(6), (e, i) => (\r\n              <option key={i + 1} value={i + 1}>\r\n                {i + 1}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <select\r\n            className=\"m-2 bg-success\" ref={priceRef}\r\n            onChange={handleQuantityChange}\r\n            value={size}\r\n          >\r\n            {priceoptions\r\n              .filter((data) => data !== '_id')\r\n              .map((data) => (\r\n                <option key={data} value={data}>\r\n                  {data}\r\n                </option>\r\n              ))}\r\n          </select>\r\n          <div className='d-inline h-100 fs-5'>â‚¹{finalprice}</div>\r\n\r\n        </div>\r\n        <hr></hr>\r\n        <div className=\"btn btn-success bg-black text-success  border border-dark rounded-circle fw-bold\" onClick={handleaddtoCart}>Add to Cart</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}